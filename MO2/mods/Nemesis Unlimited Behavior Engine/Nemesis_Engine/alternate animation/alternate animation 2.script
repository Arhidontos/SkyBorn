Scriptname FNBE_aa Hidden

bool Function SetAnimGroup(actor akTarget, string animGroup, int animBaseNumber, int number, string modname, bool debugOutput = false) global
	return Nemesis_AA.SetAnimGroupEX(akTarget, animGroup, animBaseNumber, number, modname, debugOutput, false)
endFunction

bool Function SetAnimGroupEX(actor akTarget, string animGroup, int animBaseNumber, int number, string modname, bool debugOutput = false, bool skipForce3D = false) global
	return Nemesis_AA.SetAnimGroupLoad(akTarget, animGroup, animBaseNumber, number, modname, debugOutput, skipForce3D, 0, 0)
endFunction

int Function GetAAmodID(string curAAPrefix, string modname, bool debugOutput = false) global
	int i = Nemesis_AA_Core.GetModID(curAAPrefix)

	if (debugOutput)
		if (i == -1)
			Debug.Trace("Mod ID not registered for Nemesis GetAAmodID. Try re-run Nemesis behavior patcher (Mod: " + modname + ", AAPrefix: " + curAAPrefix + ")")
		else
			Debug.Trace("Nemesis GetAAmodID successful (Mod: " + modname + ", AAPrefix: " + curAAprefix + ", ModID:" + i + ")")
		endif
	endif

	return i
endFunction

int Function GetGroupBaseValue(int AAmodID, int AAgroupID, string modname, bool debugOutput = false) global
	if (AAmodID < 0 || AAmodID > 29 || AAgroupID < 0 || AAgroupID > $MaxGroup$)
		Debug.Trace("Invalid parameter for Nemesis GetGroupBaseValue (Mod: " + modname + ", ModID: " + AAmodID + ", GroupID:" + AAgroupID + ")")
		return -1
	endif
	
	int i = Nemesis_AA_Core.GetBaseValue(AAmodID, AAgroupID)

	if (i != -1)
		return i
	endif
	
	Debug.Trace("Mod/Group ID not registered for Nemesis GetGroupBaseValue. Try re-run Nemesis behavior patcher (Mod: " + modname + ", ModID:" + AAmodID + ", GroupID:" + AAgroupID + ")")  
	return i
endFunction

int[] Function GetAllGroupBaseValues(int AAmodID, string mod, bool debugOutput = false) global
	int[] GroupBaseValue
	if (AAmodID < 0 || AAmodID > 29)
		Debug.Trace("Nemesis Alternate Animation GetAllGroupBaseValues invalid parameter (Mod:" + mod + ", ID: " + AAmodID + ")")
		return GroupBaseValue
	endif
	
	return Nemesis_AA_Core.GetAllBaseValue(AAmodID)
endFunction

int Function GetInstallationCRC() global
	return $InstallationKey$
endFunction

Function GetAAsets(int nSets, int[] groupID, int[] modID, int[] animBase, int[] Index, string modname, bool debugOutput = false) global
	if (debugOutput)
		Debug.Trace("Initializing Nemesis GetAAsets (Mod: " + modname + ")")
	endif

	int[] AASet = Nemesis_AA_Core.GetAASetList(nSets)
	int i = 0
	int last = -1

	while (i < nSets)
		int DataCode = AASet[i]
		modID[i] = DataCode / 1000000
		groupID[i] = ( DataCode - modID[i] * 1000000 ) / 1000
		animBase[i] = ( DataCode - modID[i] * 1000000 - groupID[i] * 1000 )

		if (groupID[i] != last)
			last = groupID[i]
			Index[groupID[i]] = i + 1
		endif

		i += 1
	endWhile

	if (debugOutput)
		Debug.Trace("Complete Nemesis GetAAsets (Mod: " + modname + ")")
	endif
endFunction
