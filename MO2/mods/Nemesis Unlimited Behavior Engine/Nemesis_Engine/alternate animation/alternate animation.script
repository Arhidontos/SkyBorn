Scriptname Nemesis_AA_Core Hidden

int Function GetModID(string curAAPrefix) global
	if(curAAPrefix == )
	return -1
endFunction

int[] Function GetAASetList(int nSet) global
	int[] AASet
	AASet = new int[$SetCount$]
	AASet[num] = 
	return AASet
endFunction

int Function GetGroupOrder(int AAgroupID) global
	if(AAgroupID == num)

	Debug.Trace("ERROR: Unknown Nemesis AAgroupID. Failed to GetGroupOrder (AA Group ID: " + AAgroupID as string + ")")
	return -1
endFunction

int Function GetModIDByGroupValue(int AAgroupID, int groupValue) global
	if(AAgroupID == value)
		

	Debug.Trace("ERROR: Failed to GetModIDByGroupValue (AA Group ID: " + AAgroupID as string + ", Value: " + groupValue + ")")
	return -1
endFunction

int Function GetBaseValue(int AAmodID, int AAgroupID) global
	int DataCode = AAmodID * 1000000 + AAgroupID * 1000

	if(DataCode == num)


	Debug.Trace("ERROR: Unknown Nemesis mod/group ID. Failed to GetBaseValue (Mod ID: " + AAmodID as string + ", AA Group ID: " + AAgroupID as string + ")")
	return -1
endFunction

int[] Function GetAllBaseValue(int AAmodID) global
	int nSet = $SetCount$
	int[] AASet
	AASet = GetAASetList(nSet)
	int i = 0
	int[] GroupBaseValue
	GroupBaseValue = new int[$GroupCount$]

	while(i < nSet)
		int DataCode = AASet[i]
		int modID = DataCode / 1000000
		int GroupID = (DataCode - modID * 1000000) / 1000
		if(modID == AAmodID)				
			GroupBaseValue[GroupID] = (DataCode - modID * 1000000 - GroupID * 1000)
		endif

		i += 1
	endWhile

	return GroupBaseValue
endFunction
